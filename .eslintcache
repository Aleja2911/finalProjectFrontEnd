[{"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/App.js":"1","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/startPage.js":"2","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/index.js":"3","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/questions.js":"4","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/bigQuestionsText.js":"5","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/Trail.js":"6","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/stemProvides.js":"7","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/resultsPage.js":"8","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/smallQuestionsText.js":"9","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/urgentQuestionsText.js":"10","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/humanQuestionsText.js":"11","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/navBar.js":"12","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/aboutUs.js":"13","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/animatedCardResults.js":"14","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/animatedCard.js":"15","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/introQuestions.js":"16","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/pagination.js":"17","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/popUp.js":"18","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/careerPath.js":"19","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/useWindowWidth.js":"20","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/missingScientist.js":"21"},{"size":9414,"mtime":1607359735505,"results":"22","hashOfConfig":"23"},{"size":927,"mtime":1607348748214,"results":"24","hashOfConfig":"23"},{"size":311,"mtime":1606235606231,"results":"25","hashOfConfig":"23"},{"size":1993,"mtime":1607348766575,"results":"26","hashOfConfig":"23"},{"size":427,"mtime":1607422685442,"results":"27","hashOfConfig":"23"},{"size":882,"mtime":1606314298073,"results":"28","hashOfConfig":"23"},{"size":1603,"mtime":1607099388023,"results":"29","hashOfConfig":"23"},{"size":5377,"mtime":1607363638343,"results":"30","hashOfConfig":"23"},{"size":529,"mtime":1607421307817,"results":"31","hashOfConfig":"23"},{"size":458,"mtime":1607421714129,"results":"32","hashOfConfig":"23"},{"size":445,"mtime":1607422404651,"results":"33","hashOfConfig":"23"},{"size":3466,"mtime":1607362572440,"results":"34","hashOfConfig":"23"},{"size":259,"mtime":1607348714508,"results":"35","hashOfConfig":"23"},{"size":2465,"mtime":1607363344351,"results":"36","hashOfConfig":"23"},{"size":1594,"mtime":1607339939626,"results":"37","hashOfConfig":"23"},{"size":1729,"mtime":1607348696530,"results":"38","hashOfConfig":"23"},{"size":1047,"mtime":1607088333019,"results":"39","hashOfConfig":"23"},{"size":1319,"mtime":1607182629064,"results":"40","hashOfConfig":"23"},{"size":4558,"mtime":1607362145690,"results":"41","hashOfConfig":"23"},{"size":411,"mtime":1607264429267,"results":"42","hashOfConfig":"23"},{"size":3894,"mtime":1607351150231,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vke957",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/App.js",["93","94"],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/startPage.js",[],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/index.js",[],["95","96"],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/questions.js",["97"],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/bigQuestionsText.js",[],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/Trail.js",[],["98","99"],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/stemProvides.js",[],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/resultsPage.js",["100","101","102"],"import React, {useState, Fragment} from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport AnimatedCardResults from \"../components/animatedCardResults\";\nimport NavBar from \"../components/navBar\";\n\n//----- pop up ----\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles({\n  button: {\n    color: \"white\",\n  },\n  media: {\n    height: 200,\n  },\n  grid:{\n    height: \"100%\",\n  }\n});\n\nconst ResultsPage = ({\n  scientistQuestions,\n  selectedQuestion,\n  setOpen,\n  open,\n  setselectedScientist,\n  selectedScientist,\n  setselectedPrograms,\n  scientistsPerPage,\n  setCurrentPage,\n  currentPage\n}) => {\n  const history = useHistory();\n  const classes = useStyles();\n  \n  \n  const handleClickOpen = (sq) => {\n    setselectedScientist(sq);\n    setOpen(true);\n  };\n  const handleClose = (e) => {\n    setOpen(false);\n  };\n\n  const handleWikiClick = (selectedScientist) => {\n    let path = window.open(selectedScientist.wiki_link);\n    history.push(path);\n  };\n\n  const handleUniPrograms = (e) => {\n    setselectedPrograms(selectedScientist.id);\n    let path = `/careerpath`;\n    history.push(path);\n  };\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  //-- pagination\n  const [page, setPage ] = useState(1)\n\n  // const handlePagination = scientistQuestions => {\n  //   const slicedscientistQuestions = scientistQuestions.slice(page === 1 ? 0 : (page - 1) * 10, page === 1 ? 10 : ((page - 1) * 10) + 10)\n  //   return slicedscientistQuestions\n  // }\n\n// const indexOfLastScientist = currentPage * scientistsPerPage;\n// const indexOfFirstScientist = indexOfLastScientist - scientistsPerPage;\n// const currentScientists = scientistQuestions\n// .filter((sq) => sq.question_id === selectedQuestion)\n// .map((sq, i).slice(indexOfFirstScientist, indexOfLastScientist)\n\n  return (\n    <Grid>\n      <NavBar />\n<div    style={{marginTop: '250px'}}>\n      \n      <h1> Meet the Women </h1>\n\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.grid} >\n        {scientistQuestions &&\n          scientistQuestions\n            .filter((sq) => sq.question_id === selectedQuestion)\n            .map((sq, i) => {\n              return (\n                <Fragment   key={i}>\n                  <Button \n                    color=\"primary\"\n                    onClick={() => handleClickOpen(sq)}\n                  >\n                    <AnimatedCardResults\n                      sq={sq}\n                      setOpen={setOpen}\n                      open={open}\n                    />\n                  \n                  </Button>\n                  {selectedScientist && (\n                    <Dialog\n                      fullScreen={fullScreen}\n                      open={open}\n                      element={selectedScientist}\n                      onClose={handleClose}\n                      aria-labelledby=\"responsive-dialog-title\"\n                    >\n                      <DialogTitle id=\"responsive-dialog-title\">\n                        {\" \"}\n                        {selectedScientist.first_name}{\" \"}\n                        {selectedScientist.last_name}{\" \"}\n                      </DialogTitle>\n                      <DialogContent>\n                        <DialogContentText>\n                          <img\n                            className={classes.media}\n                            src={selectedScientist.picture}\n                            alt=\"scientist woman working\"\n                          />\n                          some short description about the scientitst should go\n                          here\n                        </DialogContentText>\n                      </DialogContent>\n                      <DialogActions>\n                        <Button onClick={handleClose}>Close</Button>\n                        <Button\n                          onClick={() => handleWikiClick(selectedScientist)}\n                        >\n                          learn more about {selectedScientist.first_name}{\" \"}\n                          {selectedScientist.last_name}\n                        </Button>\n                        <Button\n                          onClick={handleUniPrograms}\n                        >\n                          follow her career path!\n                        </Button>\n                      </DialogActions>\n                    </Dialog>\n                  )}\n                  \n                </Fragment>\n              );\n            })}\n            \n      </Grid>\n      </div>\n    </Grid>\n  );\n};\n\nexport default ResultsPage;\n\n/* <Paginations scientistQuestions={scientistQuestions.length} paginate={paginate} scientistsPerPage={scientistsPerPage}   /> */\n//<Pagination count={Math.floor(scientistQuestions.length / 10)} onChange={(e, page) => setPage(page)} />","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/smallQuestionsText.js",[],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/urgentQuestionsText.js",[],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/humanQuestionsText.js",[],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/navBar.js",[],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/aboutUs.js",[],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/animatedCardResults.js",[],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/animatedCard.js",[],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/introQuestions.js",[],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/pagination.js",[],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/popUp.js",[],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/careerPath.js",["103"],"import React, { useState, Fragment } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport NavBar from \"../components/navBar\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    ul: {\n        display: 'flex',\n        justifyContent: 'center',\n        \n        \"& .MuiPaginationItem-root\": {\n          color: \"#ffffff\",\n        },\n    },\n    button: {\n        color: \"purple\"\n    },\n    heading: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: \"33.33%\",\n        flexShrink: 0,\n        marginLeft: 0,\n        width: \"25rem\",\n    },\n    secondaryHeading: {\n        marginLeft: 10,\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    accordion: {\n        margin: 10,\n    },\n    }));\n\n    const CareerPath = ({\n    scientistPrograms,\n    selectedScientist,\n    setExpanded,\n    expanded,\n    }) => {\n    const history = useHistory();\n    const classes = useStyles();\n\n    const handleProgramClick = (sp) => {\n        let path = window.open(sp.program_site);\n        history.push(path);\n    };\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const [page, setPage] = useState(1)\n    \n    const handleReturn = (e) => {\n        let path = `/resultsPage`;\n        history.push(path);\n        console.log(\"it works\");\n    };\n\n    const filteredScientistPrograms = scientistPrograms && scientistPrograms.filter((sp) => sp.scientist_id === selectedScientist.scientist_id)\n\n    const handlePagination = programs => {\n        const slicedPrograms = programs.slice(page === 1 ? 0 : (page - 1) * 5, page === 1 ? 5 : ((page - 1) * 5) + 5)\n        return slicedPrograms\n      }\n \n    return (\n        <Grid>\n        <NavBar />\n        <Grid>\n            {filteredScientistPrograms && handlePagination(filteredScientistPrograms)\n                .map((sp, i) => {\n                return (\n                    <Fragment key={i}>\n                    <Grid >\n                        <Accordion\n                        expanded={expanded === i}\n                        onChange={handleChange(i)}\n                        className={classes.accordion}\n                        >\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                            aria-controls=\"panel1bh-content\"\n                            id=\"panel1bh-header\"\n                        >\n                            <Typography className={classes.heading}>\n                                {sp.program_name}\n                            </Typography>\n                            <Typography className={classes.secondaryHeading}>\n                                {sp.university_name}\n                            </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Typography>\n                            <p> Duration: {sp.duration} </p>\n                            <p> Location: {sp.city}, {sp.country} </p>\n                            \n                            <Button\n                                className={classes.button}\n                                onClick={() => {\n                                handleProgramClick(sp);\n                                }}\n                                \n                            >\n                                Visit Program Site\n                            </Button>\n                            </Typography>\n                        </AccordionDetails>\n                        </Accordion>\n                    </Grid>\n                    </Fragment>\n                );\n                })}\n                <Pagination classes={{ ul: classes.ul }} count={Math.floor(filteredScientistPrograms.length / 5)} color=\"primary\" onChange={(e,p) => setPage(p)} />\n        </Grid>\n        </Grid>\n    );\n    };\n\nexport default CareerPath;\n//expandIcon={<ExpandMoreIcon />}\n","/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/components/useWindowWidth.js",["104"],"import React, { useState, useEffect } from 'react';\n\nconst UseWindowWidth = () => {\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n    useEffect(() => {\n        const handleWindowResize = () => {\n            setWindowWidth(window.innerWidth);\n        };\n        window.addEventListener('resize', handleWindowResize)\n    }, [])\n\n    return windowWidth;\n}\n \nexport default UseWindowWidth;",["105","106"],"/Users/alejandraossajimenez/Desktop/WBSCoding/FinalProject/final_project_front_end/src/pages/missingScientist.js",["107"],"import React, { useState } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase'\n\nimport NavBar from \"../components/navBar\";\n\nconst BootstrapInput = withStyles((theme) => ({\n    root: {\n      'label + &': {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      borderRadius: 4,\n      position: 'relative',\n      backgroundColor: \"purple\",\n      border: '1px solid #ced4da',\n      fontSize: 16,\n      padding: '10px 26px 10px 12px',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:focus': {\n        borderRadius: 4,\n        borderColor: '#80bdff',\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n      },\n    },\n  }))(InputBase);\n\n  const useStyles = makeStyles((theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n    },\n  }));\n  \nconst MissingScientistsForm = () => {\n    const classes = useStyles();\n    const [field, setField] = useState(null);\n    console.log(field)\n    \n    const handleChange = (event) => {\n    setField(event.target.value);\n    };\n\n    return ( \n        <div>\n        <NavBar />\n        <FormControl className={classes.margin}>\n            <InputLabel htmlFor=\"demo-customized-textbox\"> First Name </InputLabel>\n            <BootstrapInput id=\"demo-customized-textbox\" />\n        </FormControl>\n        <FormControl className={classes.margin}>\n            <InputLabel htmlFor=\"demo-customized-textbox\"> Last Name </InputLabel>\n            <BootstrapInput id=\"demo-customized-textbox\" />\n        </FormControl>\n\n        <FormControl className={classes.margin}>\n            <InputLabel htmlFor=\"demo-customized-textbox\"> Area of Expertise </InputLabel>\n            <BootstrapInput id=\"demo-customized-textbox\" />\n        </FormControl>\n        <FormControl className={classes.margin}>\n            <InputLabel htmlFor=\"demo-customized-textbox\"> Wikipedia Link </InputLabel>\n            <BootstrapInput id=\"demo-customized-textbox\" />\n        </FormControl>\n\n        <FormControl className={classes.margin}>\n        <InputLabel id=\"demo-customized-select-label\"> Field </InputLabel>\n        <Select\n          labelId=\"demo-customized-select-label\"\n          id=\"demo-customized-select\"\n          placeholder=\"biology\"\n          value={field}\n          onChange={handleChange}\n          input={<BootstrapInput />}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={field}>Chemistry</MenuItem>\n          <MenuItem value={field}>Biology</MenuItem>\n          <MenuItem value={field}>Physics</MenuItem>\n          <MenuItem value={field}> Astronomy </MenuItem>\n          <MenuItem value={field}>Mathematics</MenuItem>\n          <MenuItem value={field}>Engineering</MenuItem>\n          <MenuItem value={field}>Computer science</MenuItem>\n          <MenuItem value={field}>Neurobiology</MenuItem>\n          <MenuItem value={field}>Enviromental Science</MenuItem>\n          <MenuItem value={field}>Planetary Science</MenuItem>\n          <MenuItem value={field}>Materials Science</MenuItem>\n          <MenuItem value={field}>Medicine</MenuItem>\n        </Select>\n      </FormControl>\n\n        </div>\n     );\n}\n \nexport default MissingScientistsForm;",{"ruleId":"108","severity":1,"message":"109","line":34,"column":10,"nodeType":"110","messageId":"111","endLine":34,"endColumn":18},{"ruleId":"108","severity":1,"message":"112","line":46,"column":10,"nodeType":"110","messageId":"111","endLine":46,"endColumn":26},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"108","severity":1,"message":"117","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},{"ruleId":"113","replacedBy":"118"},{"ruleId":"115","replacedBy":"119"},{"ruleId":"108","severity":1,"message":"120","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":18},{"ruleId":"108","severity":1,"message":"121","line":73,"column":10,"nodeType":"110","messageId":"111","endLine":73,"endColumn":14},{"ruleId":"108","severity":1,"message":"122","line":73,"column":16,"nodeType":"110","messageId":"111","endLine":73,"endColumn":23},{"ruleId":"108","severity":1,"message":"123","line":68,"column":11,"nodeType":"110","messageId":"111","endLine":68,"endColumn":23},{"ruleId":"108","severity":1,"message":"124","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"113","replacedBy":"125"},{"ruleId":"115","replacedBy":"126"},{"ruleId":"108","severity":1,"message":"127","line":7,"column":8,"nodeType":"110","messageId":"111","endLine":7,"endColumn":20},"no-unused-vars","'programs' is assigned a value but never used.","Identifier","unusedVar","'selectedPrograms' is assigned a value but never used.","no-native-reassign",["128"],"no-negated-in-lhs",["129"],"'useState' is defined but never used.",["128"],["129"],"'Pagination' is defined but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'handleReturn' is assigned a value but never used.","'React' is defined but never used.",["128"],["129"],"'NativeSelect' is defined but never used.","no-global-assign","no-unsafe-negation"]